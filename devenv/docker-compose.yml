version: '3.3'
services:
  mongo:
    image: mongo:latest
    environment:
       MONGO_INITDB_ROOT_USERNAME: root
       MONGO_INITDB_ROOT_PASSWORD: 123456

    ports:
      - "27017:27017"  # expose port to host machine 暴露接口到宿主机
    command: mongod --auth
  redis:
    image: redis:latest
#    restart: always
    # command: redis-server --requirepass "password" # set redis password 设置 Redis 密码
    # volumes:
    #   - "/opt/middle-platform-backend/redis/data:/data"  # make data persistent 持久化
    ports:
      - "6379:6379"  # expose port to host machine 暴露接口到宿主机
  # splash:  # use Splash to run spiders on dynamic pages
  #   image: scrapinghub/splash
  #   container_name: splash
  #   ports:
  #     - "8050:8050"
  mysql:
    platform: linux/x86_64
    image: mysql:8.0.29
    volumes:
      - ./mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 5s
      timeout: 1s
      retries: 10
  mockserver:
    image: mockserver/mockserver:mockserver-5.11.1
    ports:
      - "1080:1080"
    environment:
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/initializerJson.json
    volumes:
      - type: bind
        source: ./initializerJson.json
        target: /config/initializerJson.json


  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"

    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: docker.io/bitnami/kafka:3.4
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=192.168.71.46:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
  kafka-manager:
    image: freakchicken/kafka-ui-lite                         # 原镜像`sheepkiller/kafkaApi-manager`
    container_name: kafkaApi-manager                            # 容器名为'kafkaApi-manager'
    ports: # 映射端口
      - "8889:8889"
    depends_on: # 解决容器依赖启动先后问题
      - kafka
  apollo-quick-start:
    image: nobodyiam/apollo-quick-start
    container_name: apollo-quick-start
    depends_on:
      - mysql
    ports:
      - "8080:8080"
      - "8070:8070"
      - "8090:8090"
    links:
      - mysql
    environment:
      #JAVA_OPTS: '-Xms100m -Xmx1000m -Xmn100m -Xss256k -XX:MetaspaceSize=10m -XX:MaxMetaspaceSize=250m'
      APOLLO_CONNECT_IP: '192.168.31.22'
      APOLLO_CONFIG_DB_USERNAME: 'root'
      APOLLO_CONFIG_DB_PASSWORD: '123456'
      APOLLO_PORTAL_DB_USERNAME: 'root'
      APOLLO_PORTAL_DB_PASSWORD: '123456'

  influxdb:
    image: amd64/influxdb
    container_name: influxdb
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=root
      - DOCKER_INFLUXDB_INIT_PASSWORD=root#123
      - DOCKER_INFLUXDB_INIT_ORG=tstcms
      - DOCKER_INFLUXDB_INIT_BUCKET=tstcms-bucket
    volumes:
      - ./influxdb_data/data:/var/lib/influxdb2
      - ./influxdb_data/config:/etc/influxdb2
    ports:
      - "8086:8086"
networks:
  backend:
    driver: bridge